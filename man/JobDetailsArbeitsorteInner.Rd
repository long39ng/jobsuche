% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/job_details_arbeitsorte_inner.R
\docType{class}
\name{JobDetailsArbeitsorteInner}
\alias{JobDetailsArbeitsorteInner}
\title{JobDetailsArbeitsorteInner}
\format{
An \code{R6Class} generator object
}
\description{
JobDetailsArbeitsorteInner Class

JobDetailsArbeitsorteInner Class
}
\details{
Create a new JobDetailsArbeitsorteInner
}
\examples{

## ------------------------------------------------
## Method `JobDetailsArbeitsorteInner$toList`
## ------------------------------------------------

# convert array of JobDetailsArbeitsorteInner (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{land}}{character [optional]}

\item{\code{region}}{character [optional]}

\item{\code{plz}}{character [optional]}

\item{\code{ort}}{character [optional]}

\item{\code{strasse}}{character [optional]}

\item{\code{koordinaten}}{\link{JobDetailsArbeitsorteInnerKoordinaten} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-JobDetailsArbeitsorteInner-new}{\code{JobDetailsArbeitsorteInner$new()}}
\item \href{#method-JobDetailsArbeitsorteInner-toJSON}{\code{JobDetailsArbeitsorteInner$toJSON()}}
\item \href{#method-JobDetailsArbeitsorteInner-toList}{\code{JobDetailsArbeitsorteInner$toList()}}
\item \href{#method-JobDetailsArbeitsorteInner-toSimpleType}{\code{JobDetailsArbeitsorteInner$toSimpleType()}}
\item \href{#method-JobDetailsArbeitsorteInner-fromJSON}{\code{JobDetailsArbeitsorteInner$fromJSON()}}
\item \href{#method-JobDetailsArbeitsorteInner-toJSONString}{\code{JobDetailsArbeitsorteInner$toJSONString()}}
\item \href{#method-JobDetailsArbeitsorteInner-fromJSONString}{\code{JobDetailsArbeitsorteInner$fromJSONString()}}
\item \href{#method-JobDetailsArbeitsorteInner-validateJSON}{\code{JobDetailsArbeitsorteInner$validateJSON()}}
\item \href{#method-JobDetailsArbeitsorteInner-toString}{\code{JobDetailsArbeitsorteInner$toString()}}
\item \href{#method-JobDetailsArbeitsorteInner-isValid}{\code{JobDetailsArbeitsorteInner$isValid()}}
\item \href{#method-JobDetailsArbeitsorteInner-getInvalidFields}{\code{JobDetailsArbeitsorteInner$getInvalidFields()}}
\item \href{#method-JobDetailsArbeitsorteInner-print}{\code{JobDetailsArbeitsorteInner$print()}}
\item \href{#method-JobDetailsArbeitsorteInner-clone}{\code{JobDetailsArbeitsorteInner$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-new"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new JobDetailsArbeitsorteInner class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$new(
  land = NULL,
  region = NULL,
  plz = NULL,
  ort = NULL,
  strasse = NULL,
  koordinaten = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{land}}{land}

\item{\code{region}}{region}

\item{\code{plz}}{plz}

\item{\code{ort}}{ort}

\item{\code{strasse}}{strasse}

\item{\code{koordinaten}}{koordinaten}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-toList"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
JobDetailsArbeitsorteInner as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of JobDetailsArbeitsorteInner (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert JobDetailsArbeitsorteInner to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of JobDetailsArbeitsorteInner
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of JobDetailsArbeitsorteInner
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
JobDetailsArbeitsorteInner in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of JobDetailsArbeitsorteInner
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of JobDetailsArbeitsorteInner
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to JobDetailsArbeitsorteInner and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-toString"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of JobDetailsArbeitsorteInner
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-print"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobDetailsArbeitsorteInner-clone"></a>}}
\if{latex}{\out{\hypertarget{method-JobDetailsArbeitsorteInner-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobDetailsArbeitsorteInner$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
