% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/job_search_response.R
\docType{class}
\name{JobSearchResponse}
\alias{JobSearchResponse}
\title{JobSearchResponse}
\format{
An \code{R6Class} generator object
}
\description{
JobSearchResponse Class

JobSearchResponse Class
}
\details{
Create a new JobSearchResponse
}
\examples{

## ------------------------------------------------
## Method `JobSearchResponse$toList`
## ------------------------------------------------

# convert array of JobSearchResponse (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{stellenangebote}}{list(\link{JobSearchResponseStellenangeboteInner}) [optional]}

\item{\code{maxErgebnisse}}{character [optional]}

\item{\code{page}}{character [optional]}

\item{\code{size}}{character [optional]}

\item{\code{facetten}}{list(\link{JobSearchResponseFacettenInner}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-JobSearchResponse-new}{\code{JobSearchResponse$new()}}
\item \href{#method-JobSearchResponse-toJSON}{\code{JobSearchResponse$toJSON()}}
\item \href{#method-JobSearchResponse-toList}{\code{JobSearchResponse$toList()}}
\item \href{#method-JobSearchResponse-toSimpleType}{\code{JobSearchResponse$toSimpleType()}}
\item \href{#method-JobSearchResponse-fromJSON}{\code{JobSearchResponse$fromJSON()}}
\item \href{#method-JobSearchResponse-toJSONString}{\code{JobSearchResponse$toJSONString()}}
\item \href{#method-JobSearchResponse-fromJSONString}{\code{JobSearchResponse$fromJSONString()}}
\item \href{#method-JobSearchResponse-validateJSON}{\code{JobSearchResponse$validateJSON()}}
\item \href{#method-JobSearchResponse-toString}{\code{JobSearchResponse$toString()}}
\item \href{#method-JobSearchResponse-isValid}{\code{JobSearchResponse$isValid()}}
\item \href{#method-JobSearchResponse-getInvalidFields}{\code{JobSearchResponse$getInvalidFields()}}
\item \href{#method-JobSearchResponse-print}{\code{JobSearchResponse$print()}}
\item \href{#method-JobSearchResponse-clone}{\code{JobSearchResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new JobSearchResponse class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$new(
  stellenangebote = NULL,
  maxErgebnisse = NULL,
  page = NULL,
  size = NULL,
  facetten = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{stellenangebote}}{stellenangebote}

\item{\code{maxErgebnisse}}{maxErgebnisse}

\item{\code{page}}{page}

\item{\code{size}}{size}

\item{\code{facetten}}{facetten}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-toList"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
JobSearchResponse as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of JobSearchResponse (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert JobSearchResponse to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of JobSearchResponse
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of JobSearchResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
JobSearchResponse in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of JobSearchResponse
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of JobSearchResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to JobSearchResponse and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-toString"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of JobSearchResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-print"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobSearchResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-JobSearchResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobSearchResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
